/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package NGO.UI;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author david
 */
public class ProjectWindow extends javax.swing.JPanel {

    /**
     * Creates new form ProjectWindow
     */
    private InfDB idb;
    private ArrayList<HashMap<String,String>> dbVal;
    
    public ProjectWindow(InfDB idb) {
        initComponents();
        dbVal = new ArrayList();
        this.idb = idb;
        fillArrayList();
    }

    public void fillArrayList(){
        try{
            dbVal = idb.fetchRows("SELECT * from projekt");
        }catch(InfException e){
            JOptionPane.showMessageDialog(null, "Error fetching from database");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProjRub = new javax.swing.JLabel();
        btnMyProj = new javax.swing.JButton();

        lblProjRub.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblProjRub.setText("Information om alla projekt");

        btnMyProj.setText("Mina projekt");
        btnMyProj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyProjActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(lblProjRub)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 334, Short.MAX_VALUE)
                .addComponent(btnMyProj)
                .addGap(256, 256, 256))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProjRub)
                    .addComponent(btnMyProj))
                .addContainerGap(624, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnMyProjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyProjActionPerformed
        // TODO add your handling code here:
        printAllProjects();
    }//GEN-LAST:event_btnMyProjActionPerformed

    public void printAllProjects() {
        for (int i = 0; i < dbVal.size(); i++) {
            System.out.println("PROJEKT " + (i + 1));
            System.out.println(getProjektNamn(i));
            System.out.println(getBeskrivning(i));
            System.out.println(getStartDatum(i));
            System.out.println(getSlutDatum(i));
            System.out.println(getKostnad(i));
            System.out.println(getStatus(i));
            System.out.println(getPrioritet(i));
            System.out.println(getProjektChefNamn(i));
            System.out.println();
        }
    }
    public String getProjektNamn(int i){
        return dbVal.get(i).get("projektnamn");
    }
    
    public String getBeskrivning(int i){
        return dbVal.get(i).get("beskrivning");
    }
    
    public String getStartDatum(int i){
        return dbVal.get(i).get("startdatum");
    }
    
    public String getSlutDatum(int i){
        return dbVal.get(i).get("slutdatum");
    }
    
    public String getKostnad(int i){
        return dbVal.get(i).get("kostnad");
    }
    
    public String getStatus(int i){
        return dbVal.get(i).get("status");
    }
    
    public String getPrioritet(int i){
        return dbVal.get(i).get("prioritet");
    }
    
    public String getProjektChefNamn(int i){// Gör så att man returnerar namnet på chefen direkt, ej id
        String namn = "";
        try{
            namn = idb.fetchSingle("select fornamn from anstalld join projekt on anstalld.aid = projekt.projektchef where projektchef = " + (dbVal.get(i).get("projektchef")));
            if(namn.isEmpty()){
                namn = "I do not contain a prjektchef name, location: ProjectWindow.java, method: getProjektChefNamn()";
            }
        }catch(InfException e){
            JOptionPane.showMessageDialog(null, "Could not fetch projektchef name");
        }
        return namn;
    }
    
    public String getLandNamn(int i){// Gör så att man returnerar namnet på landet direkt, ej id
        String landNamn = "";
        try{
            landNamn = idb.fetchSingle("Select namn from land join projekt on land.lid = projekt.pid where pid = " + dbVal.get(i).get("namn"));
        }catch(InfException e){
            JOptionPane.showMessageDialog(null, "Error fetching land namn from db");
        }
        return landNamn;
    }
    /*
    public String getLand(int i){
        return 
    }
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMyProj;
    private javax.swing.JLabel lblProjRub;
    // End of variables declaration//GEN-END:variables
}
